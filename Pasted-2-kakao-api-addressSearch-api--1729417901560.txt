2. kakao api로 addressSearch로 위도, 경도 값 구하기
여기서 부터는 약간 단계가 더 많다! 단계가 많다고 복잡한 것은 아님 ㅠㅠ

카카오 맵 api 사이트에서 app key를 발급 받는다.

https://apis.map.kakao.com/

마찬가지로 script src에 app key를 포함한 url 넣어주고

<script src=`//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.NEXT_PUBLIC_KAKAO_APP_JS_KEY}&libraries=services,clusterer&autoload=false`></script>
이제 위의 post code 팝업 컴포넌트를 일부 수정하여서, 주소를 클릭하였을 때에 바로 위도 경도 값을 알아오는 코드를 추가해보자.
주소를 string으로 받아서, x, y값을 반환하는 method는 addressSearch이다.
참고 문서
https://apis.map.kakao.com/web/documentation/#services_Geocoder_addressSearch

addressSearch() method에 대한 간단한 사용법은 아래와 같다.



1) geocoder 생성자

 const geoCoder = new kakao.maps.services.Geocoder();
2) 주소찾기에서 클릭하여 얻은 string을 파라미터로 받는 함수를 만든다.

참고로 coords는 coordinates의 줄임말로, 좌표(위도와 경도)를 말함!
그리고 진짜 너무 헷갈리는데 (나만 헷갈릴 수도 있음)
X : latitude 위도
Y : longitude 경도

  const getAddressCoords = (address: string) => {
    return new Promise((resolve, reject) => {
      geoCoder.addressSearch(address, (result: any, status: any) => {
        if (status === kakao.maps.services.Status.OK) {
          const coords = new kakao.maps.LatLng(result[0].x, result[0].y);
          resolve(coords);
        } else {
          reject(status);
        }
      });
    });
  };
3) 주소 찾기에서 검색 후, 주소 선택 시 실행되는 oncomplete 함수를 일부 수정한다.

  const handlePostcode = async () => {
    new daum.Postcode({
      submitMode: false,
      oncomplete: async (data: Oncomplete) => {
        let mainAddress = '';
        let zipCode = '';
        let x = 0;
        let y = 0;

        mainAddress = data.roadAddress || data.jibunAddress;
        zipCode = data.zonecode;

        const coords = await getAddressCoords(mainAddress);
        x = coords.getLng();
        y = coords.getLat();

        handleAddressChange(mainAddress);
        handlePosInfoChange(x, y);

        close();
      },

      onresize: (size: { height: string }) => {
        if (ref.current) {
          ref.current.style.height = size.height + 'px';
        }
      },

      width: '100%',
      height: '100%',
    }).embed(ref.current);
  };
이리하여 완성!

다음 주소 api 및 카카오 api는 이번 프로젝트 뿐만 아니라 정말 자주 사용되는 외부 api이기 때문에 종종 들어와서 셀프 참고용으로 남겨보았다.